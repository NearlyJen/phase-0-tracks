1. Display the information in one table (either table is fine).

sqlite> SELECT * FROM members;
1|Jennifer|44|true
2|Theron|39|true
3|Ethan|13|false

2. Update an item that meets some condition (you can choose a condition that makes sense).

sqlite> UPDATE to_do
   ...> SET complete = 'true'
   ...> WHERE complete = 'false';
sqlite> SELECT * FROM to_do;
1|buy kale|3|true|2
2|wash car|2|true|3
3|get job|1|true|1

3. Display the information in both tables using one query.

sqlite> SELECT * FROM members, to_do WHERE members.id = to_do.member_id;
2|Theron|39|true|1|buy kale|3|true|2
3|Ethan|13|false|2|wash car|2|true|3
1|Jennifer|44|true|3|get job|1|true|1

4. Display a narrower selection of columns (fewer columns than all of them, in other words) from both tables using one query.

sqlite> SELECT members.name, to_do.description FROM members JOIN to_do ON members.id = to_do.member_id;
Theron|buy kale
Ethan|wash car
Jennifer|get job

5. Delete an item that meets some condition (you can choose a condition that makes sense).

sqlite> DELETE FROM to_do WHERE complete = 'true';
sqlite> SELECT * FROM to_do;


RELEASE 3 ADDITIONAL JOINS

SELECT members.name, to_do.description, to_do.priority
   ...> FROM members
   ...> INNER JOIN to_do
   ...> ON members.id = to_do.member_id;
Theron|buy kale|1
Ethan|wash car|2
Jennifer|get job|3


SELECT members.name, to_do.description, to_do.priority FROM members LEFT JOIN to_do ON members.id = to_do.member_id;
Jennifer|get job|3
Theron|buy kale|1
Theron|get job|3
Ethan|wash car|2